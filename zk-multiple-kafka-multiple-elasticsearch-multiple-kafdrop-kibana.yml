version: '2.1'

services:
  zookeeper01:
    image: zookeeper:3.4.9
    hostname: zookeeper01
    container_name: zookeeper01
    ports:
      - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zookeeper01:2888:3888 server.2=zookeeper02:2888:3888 server.3=zookeeper03:2888:3888
    volumes:
      - zookeeper01-data:/data
      - zookeeper01-datalog:/datalog
    networks:
      - kafka-network
      
  zookeeper02:
    image: zookeeper:3.4.9
    hostname: zookeeper02
    container_name: zookeeper02
    ports:
      - "2182:2182"
    environment:
        ZOO_MY_ID: 2
        ZOO_PORT: 2182
        ZOO_SERVERS: server.1=zookeeper01:2888:3888 server.2=zookeeper02:2888:3888 server.3=zookeeper03:2888:3888
    volumes:
      - zookeeper02-data:/data
      - zookeeper02-datalog:/datalog
    networks: 
      - kafka-network

  zookeeper03:
    image: zookeeper:3.4.9
    hostname: zookeeper03
    container_name: zookeeper03 
    ports:
      - "2183:2183"
    environment:
        ZOO_MY_ID: 3
        ZOO_PORT: 2183
        ZOO_SERVERS: server.1=zookeeper01:2888:3888 server.2=zookeeper02:2888:3888 server.3=zookeeper03:2888:3888
    volumes:
      - zookeeper03-data:/data
      - zookeeper03-datalog:/datalog
    networks:
      - kafka-network

  kafka01:
    image: confluentinc/cp-kafka:5.5.1
    hostname: kafka01
    container_name: kafka01
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka01:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper01:2181,zookeeper02:2182,zookeeper03:2183"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
    volumes:
      - kafka01-data:/var/lib/kafka/data
    depends_on:
      - zookeeper01
      - zookeeper02
      - zookeeper03
    networks:
      - kafka-network

  kafka02:
    image: confluentinc/cp-kafka:5.5.1
    hostname: kafka02
    container_name: kafka02 
    ports:
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka02:19093,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper01:2181,zookeeper02:2182,zookeeper03:2183"
      KAFKA_BROKER_ID: 2
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
    volumes:
      - kafka02-data:/var/lib/kafka/data
    depends_on:
      - zookeeper01
      - zookeeper02
      - zookeeper03
    networks:
     - kafka-network

  kafka03:
    image: confluentinc/cp-kafka:5.5.1
    hostname: kafka03
    container_name: kafka03 
    ports:
      - "9094:9094"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka03:19094,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper01:2181,zookeeper02:2182,zookeeper03:2183"
      KAFKA_BROKER_ID: 3
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
    volumes:
      - kafka03-data:/var/lib/kafka/data
    depends_on:
      - zookeeper01
      - zookeeper02
      - zookeeper03
    networks:
      - kafka-network
      
  kafdrop:
    hostname: kafdrop
    container_name: kafdrop 
    image: obsidiandynamics/kafdrop
    ports:
      - '9000:9000'
    environment:
      - KAFKA_BROKERCONNECT=kafka01:19092,kafka02:19093,kafka03:19094
    depends_on:
      - kafka01
      - kafka02
      - kafka03
    networks:
      - kafka-network   
      
  elastic01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.1
    container_name: elastic01
    environment:
      - node.name=elastic01
      - cluster.name=elastic-docker-cluster
      - discovery.seed_hosts=elastic02,elastic03
      - cluster.initial_master_nodes=elastic01,elastic02,elastic03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elastic01-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - elastic-network
  
  elastic02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.1
    container_name: elastic02
    environment:
      - node.name=elastic02
      - cluster.name=elastic-docker-cluster
      - discovery.seed_hosts=elastic01,elastic03
      - cluster.initial_master_nodes=elastic01,elastic02,elastic03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elastic02-data:/usr/share/elasticsearch/data
    networks:
      - elastic-network
  
  elastic03:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.1
    container_name: elastic03
    environment:
      - node.name=elastic03
      - cluster.name=elastic-docker-cluster
      - discovery.seed_hosts=elastic01,elastic02
      - cluster.initial_master_nodes=elastic01,elastic02,elastic03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elastic03-data:/usr/share/elasticsearch/data
    networks:
      - elastic-network
  
  kibana:
    hostname: kibana
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.9.1
    environment:
      SERVER_NAME: kibana
      ELASTICSEARCH_HOSTS: http://elastic01:9200  
    ports:
      - 5601:5601
    depends_on:
      - elastic01
      - elastic02
      - elastic03
    networks:
      - elastic-network
    
volumes:
  zookeeper01-data:
    name: zookeeper01-data
    driver: local
  zookeeper01-datalog:
    name: zookeeper01-datalog
    driver: local  
  zookeeper02-data:
    name: zookeeper02-data
    driver: local
  zookeeper02-datalog:
    name: zookeeper02-datalog
    driver: local
  zookeeper03-data:
    name: zookeeper03-data
    driver: local
  zookeeper03-datalog:
    name: zookeeper03-datalog
    driver: local
  kafka01-data:
    name: kafka01-data
    driver: local
  kafka02-data:
    name: kafka02-data
    driver: local
  kafka03-data:
    name: kafka03-data
    driver: local
  elastic01-data:
    name: elastic01-data
    driver: local
  elastic02-data:
    name: elastic02-data
    driver: local
  elastic03-data:
    name: elastic03-data
    driver: local

networks:
  kafka-network:
    name: kafka-network
    driver: bridge
  elastic-network:
    name: elastic-network
    driver: bridge
